name: Test Suite

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Run Tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        bash-version: ['4.4', '5.1']
        exclude:
          # macOS comes with bash 3.2, but we'll test with newer versions
          - os: macos-latest
            bash-version: '4.4'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Bash (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y bash=${{ matrix.bash-version }}* || true
        
    - name: Setup Bash (macOS)  
      if: matrix.os == 'macos-latest'
      run: |
        brew install bash
        
    - name: Install Bats
      run: |
        if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
          sudo apt-get install -y bats
        else
          brew install bats-core
        fi
        
    - name: Verify installation
      run: |
        bash --version
        bats --version
        git --version
        
    - name: Run tests
      run: |
        chmod +x git-worktree-manager.sh
        chmod +x worktree-shortcuts.sh  
        chmod +x run_tests.sh
        ./run_tests.sh
        
    - name: Test installation methods
      run: |
        # Test global installation
        sudo cp git-worktree-manager.sh /usr/local/bin/git-worktree-manager
        sudo chmod +x /usr/local/bin/git-worktree-manager
        
        # Create test repository
        mkdir -p /tmp/test-repo
        cd /tmp/test-repo
        git init
        git config user.email "test@example.com"
        git config user.name "Test User"
        echo "test" > README.md
        git add README.md
        git commit -m "Initial commit"
        
        # Test basic functionality
        git-worktree-manager help
        git-worktree-manager list
        git-worktree-manager create test-branch
        git-worktree-manager list
        git-worktree-manager remove test-branch

  lint:
    name: Shellcheck Linting
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install shellcheck
      run: sudo apt-get install -y shellcheck
      
    - name: Lint main script
      run: shellcheck -e SC1091 git-worktree-manager.sh
      
    - name: Lint shortcuts script
      run: shellcheck -e SC1091 worktree-shortcuts.sh
      
    - name: Lint test runner
      run: shellcheck run_tests.sh
      
    - name: Lint test helpers
      run: shellcheck tests/helpers/test_helpers.bash

  compatibility:
    name: Shell Compatibility
    runs-on: ubuntu-latest
    strategy:
      matrix:
        shell: [bash, dash, zsh]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install shells
      run: |
        sudo apt-get update
        sudo apt-get install -y bash dash zsh
        
    - name: Test with different shells
      run: |
        # Test basic syntax parsing
        ${{ matrix.shell }} -n git-worktree-manager.sh
        
        # Test basic execution (if bash-compatible)
        if [[ "${{ matrix.shell }}" != "dash" ]]; then
          chmod +x git-worktree-manager.sh
          mkdir -p /tmp/shell-test
          cd /tmp/shell-test
          git init
          git config user.email "test@example.com" 
          git config user.name "Test User"
          echo "test" > README.md
          git add README.md
          git commit -m "Initial commit"
          ${{ matrix.shell }} ../git-worktree-manager.sh help
        fi